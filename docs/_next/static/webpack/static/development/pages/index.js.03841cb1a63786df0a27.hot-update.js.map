{"version":3,"file":"static/webpack/static/development/pages/index.js.03841cb1a63786df0a27.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Head from 'next/head'\nimport { GlobalStyle, Main } from '../Luna/components/layouts/default.style'\nimport {\n  MenuToggle,\n  MenuToggleText,\n  HomeMain,\n} from '../components/pages/Home/index.style'\nimport { Hero } from '../components/Hero'\nimport { Navigation } from '../components/Navigation'\nimport { Work } from '../components/Work'\nimport { About } from '../components/About'\nimport { Contact } from '../components/Contact'\nimport { SineWave } from '../components/svgs/SineWave'\n\nconst useIsInView = (margin = '0px') => {\n  const [isIntersecting, setIntersecting] = useState(false)\n  const workRef = useRef()\n\n  useEffect(() => {\n    const observerCallback = ([entry]) => {\n      setIntersecting(entry.isIntersecting)\n    }\n    const observerOptions = { rootMargin: margin }\n    const observer = new IntersectionObserver(observerCallback, observerOptions)\n    const refCurrent = workRef.current\n\n    if (refCurrent) {\n      observer.observe(refCurrent)\n    }\n\n    return () => {\n      if (refCurrent) {\n        observer.unobserve(refCurrent)\n      }\n    }\n  }, [margin])\n\n  return [workRef, isIntersecting]\n}\n\nconst Index = () => {\n  const [showText, setShowText] = useState(false)\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\n  const [workRef, isIntersecting] = useIsInView('-250px')\n\n  const toggleNavigation = () => {\n    setMenuIsOpen(!menuIsOpen)\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShowText(true)\n    }, 400)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Toby Hulbert | Engineer. Mixer. Producer</title>\n      </Head>\n      <GlobalStyle />\n      <MenuToggle onClick={toggleNavigation}>\n        <MenuToggleText>Open menu</MenuToggleText>\n        <SineWave />\n      </MenuToggle>\n      <Navigation menuIsOpen={menuIsOpen} showText={showText} />\n      <Main>\n        <Hero isHidden={isIntersecting} />\n        <HomeMain ref={workRef}>\n          <Work />\n          <About />\n          <Contact />\n        </HomeMain>\n      </Main>\n    </React.Fragment>\n  )\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}