{"version":3,"file":"static/webpack/static/development/pages/index.js.42112d49be3ee31a4549.hot-update.js","sources":["webpack:///./components/WorkItem/index.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport gsap from 'gsap'\nimport { useRef, useEffect } from 'react'\nimport {\n  WorkItem,\n  WorkImg,\n  WorkBackground,\n  WorkArtist,\n  WorkProject,\n  WorkRole,\n  WorkOverlay,\n} from './index.style'\n\nconst ThisWorkItem = ({ content, loaded }) => {\n  const { imageSrc, artist, project, role } = content\n  const backgroundRef = useRef()\n  const overlayRef = useRef()\n  const tlReveal = gsap.timeline({ paused: true })\n\n  useEffect(() => {\n    tlReveal\n      .fromTo(\n        backgroundRef.current,\n        {\n          scaleY: 0,\n        },\n        {\n          scaleY: 1,\n          duration: 0.25,\n          ease: 'power3.out',\n        }\n      )\n      .fromTo(\n        overlayRef.current,\n        {\n          opacity: 0,\n          y: 20,\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 0.25,\n          ease: 'power2.out',\n        }\n      )\n  }, [tlReveal])\n\n  const handleEnter = () => {\n    if (!loaded) return\n\n    tlReveal.play()\n  }\n\n  const handleLeave = () => {\n    if (!loaded) return\n\n    tlReveal.reverse()\n  }\n  return (\n    <WorkItem\n      onFocus={handleEnter}\n      onMouseEnter={handleEnter}\n      onBlur={handleLeave}\n      onMouseLeave={handleLeave}\n    >\n      <WorkImg src={`images/work/${content.imageSrc}`} />\n      <WorkBackground ref={backgroundRef} data-work-loader />\n      <WorkOverlay ref={overlayRef} loaded={loaded}>\n        <WorkArtist>{content.artist}</WorkArtist>\n        <WorkProject>{content.project}</WorkProject>\n        <WorkRole>{content.role}</WorkRole>\n      </WorkOverlay>\n    </WorkItem>\n  )\n}\n\nThisWorkItem.propTypes = {\n  content: PropTypes.object,\n  loaded: PropTypes.bool,\n}\n\nexport { ThisWorkItem as WorkItem }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAIA;AADA;AAIA;AACA;AACA;AAHA;AASA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAFA;;;;;A","sourceRoot":""}